name: cron orioks checker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "10,25,40,55 * * * *"

env: # environment variables
  YANDEX_DISK_API_TOKEN: ${{ secrets.YANDEX_DISK_API_TOKEN }}
  VK_API_TOKEN: ${{ secrets.VK_API_TOKEN }}
  VK_PEER_ID: ${{ secrets.ORIOKS_API_TOKEN }}
  VK_USE: ${{ secrets.VK_USE }}
  TG_API_TOKEN: ${{ secrets.TG_API_TOKEN }}
  TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
  TG_USE: ${{ secrets.TG_USE }}

jobs:
  create_yadisk_folder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: . setup/create_folder_yandex_disk.sh
  firefox_browser:
    runs-on: ubuntu-latest
    steps:
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - uses: docker-practice/actions-setup-docker@master
      - run: docker run -d -p 4444:4444 selenium/standalone-firefox
  check:
    needs: [create_yadisk_folder, firefox_browser]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - run: set -eu
      - run: python3 -m venv ./.venv && source ./.venv/bin/activate && 
             pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: source ./.venv/bin/activate && python main.py > /dev/null 2>&1
